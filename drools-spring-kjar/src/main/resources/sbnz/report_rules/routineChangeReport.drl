package report_rules;

import sbnz.skincare.facts.Patient;
import sbnz.skincare.facts.Product;
import sbnz.skincare.facts.ProductReaction;
import sbnz.skincare.facts.Routine;
import java.time.LocalDate
import java.util.List;

rule "Routine changed too often without any unwanted product reactions"
	when
	    $p : Patient($routines: routines, $productReactions: productReactions)
	    $productReactionIds: List() from accumulate (
	        ProductReaction($id: product.getId()) from $productReactions,
	        collectList($id)
	    )
	    $routineChangesIn1Year: Long( ) from accumulate (
	        Routine( 
	        	$r: this,
	        	$startDate: startDate, 
	        	$startDate.isAfter(LocalDate.now().minusMonths(12)), 
	        	$products: products
	        ) from $routines and
	        List(size == 0) from collect(
         		Product($productId: id, $productId memberOf $productReactionIds) from $products // NOT EXISTS?
         	),
	        count($r)
	    )
		eval($routineChangesIn1Year >= 3)
	then
		System.out.println("Suspicious: " + $p + " routines changed: " + $routineChangesIn1Year);
end
