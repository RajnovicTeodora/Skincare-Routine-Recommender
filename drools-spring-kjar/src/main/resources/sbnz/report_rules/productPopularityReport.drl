package report_rules;

global ProductReport productReport;

import sbnz.skincare.facts.Product;
import sbnz.skincare.facts.Routine;
import sbnz.skincare.facts.drools.ProductReport;

declare BestProduct
end

declare WorstProduct
end

rule "Most popular product"
	salience 100 * $value
	when
		$p: Product($pId: id)
		$a: List() from accumulate (
		    $r: Routine($products: products) and  // For every routine get a list of all product id's with repetition
	   		Product($i: id) from $products,
	       	collectList($i)
	    )
		Number($value: intValue) from accumulate ( // Count the number of occurences of each product id
	
	       	Number($num: this, $num == $pId) from $a,
	       	count(1)
		);
		not BestProduct();
	then
		System.out.println("Best Product: " + $value  + " : " + $pId);			
		insert ( new BestProduct() );
		productReport.setBestProduct($p);
end;


rule "Least popular product"
	salience -100 * $value
	when
		$p: Product($pid: id)
		$a: List() from accumulate (
		    $r: Routine($products: products) and  // For every routine get a list of all product id's with repetition
	   		Product($i: id) from $products,
	       	collectList($i)
	    )
		Number($value: intValue) from accumulate ( // Count the number of occurences of each product id
	
	       	Number($num: this, $num == $pid) from $a,
	       	count(1)
		);
		not WorstProduct();
	then
		System.out.println("WorstProduct: " + $value  + " : " + $pid);			
		insert ( new WorstProduct() );
		productReport.setWorstProduct($p);
end;